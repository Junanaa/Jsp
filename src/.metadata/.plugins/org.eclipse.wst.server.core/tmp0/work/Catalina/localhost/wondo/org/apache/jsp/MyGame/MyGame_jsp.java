/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2023-10-17 05:01:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.MyGame;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class MyGame_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	request.setCharacterEncoding("UTF-8"); //한글 표시용
	//넘어온값저장
	String sName = request.getParameter("mName");

	
	
	
	if(sName == null){
		sName = "잘못된 접근입니다.";
	}

	
	String sTel_1 = request.getParameter("mTel_1");
	String sTel_2 = request.getParameter("mTel_2");
	String sTel_3 = request.getParameter("mTel_3");

	String sShowTel = sTel_1 + "-" + sTel_2 + "-" + sTel_3;
	String sSaveTel = sTel_1 + sTel_2 + sTel_3;
	

	
	String sUser ="";
	int nCom = 0;
	int nUser =0;
	String sTempRes ="";
	
	int nTotalNo=0; //실행한 횟수
	int nUserWinNo=0; //사용자가 이긴 횟수
	
	if((sName != null)&&(sTel_1 == null)){ //정상적으로 접근해서 가위바위보를 실행하는 경우
		sUser = request.getParameter("mRadio");
		nTotalNo = Integer.parseInt(request.getParameter("mTotal"));
		nUserWinNo = Integer.parseInt(request.getParameter("mUserWin"));
		
		nTotalNo =nTotalNo + 1;
		
		nUser = Integer.parseInt(sUser);//문자를 숫자로
		sUser = nUser + ""; //숫자를 문자로
		// 컴퓨터 선택 처리 및 저장
		nCom =((int)(Math.random()*3))+1; //1,2,3 중에 하나만 선택
		
		//두개의 값을 판단해서 결과 산출    1.가위 2.바위 3.보
		if(nUser==1){
			if(nCom==1){
				sTempRes="비김";
			}
			else if(nCom==2){
				sTempRes="컴퓨터 승";
			}
			else if(nCom==3){
				sTempRes=sName+" 승";
				nUserWinNo = nUserWinNo + 1;
			}
		}
		else if(nUser==2){
			if(nCom==1){
				sTempRes=sName+" 승";
				nUserWinNo = nUserWinNo + 1;
			}
			else if(nCom==2){
				sTempRes="비김";
			}
			else if(nCom==3){
				sTempRes="컴퓨터 승";
			}
		}
		else if(nUser==3){
			if(nCom==1){
				sTempRes="컴퓨터 승";
			}
			else if(nCom==2){
				sTempRes=sName+" 승";
				nUserWinNo = nUserWinNo + 1;
			}
			else if(nCom==3){
				sTempRes="비김";
			}
		}
	}
	String userChoiceText = ""; // 사용자 선택 한글 텍스트를 저장할 변수
    String comChoiceText = ""; // 컴퓨터 선택 한글 텍스트를 저장할 변수
    if (nUser == 1) {
        userChoiceText = "가위";
    } else if (nUser == 2) {
        userChoiceText = "바위";
    } else if (nUser == 3) {
        userChoiceText = "보";
    }

    if (nCom == 1) {
        comChoiceText = "가위";
    } else if (nCom == 2) {
        comChoiceText = "바위";
    } else if (nCom == 3) {
        comChoiceText = "보";
    }
	

      out.write('\r');
      out.write('\n');

// 가위바위보 승률
double winRate;
if (nTotalNo > 0) {
    winRate = ((double)nUserWinNo / nTotalNo) * 100;
} else {
    winRate = 0.0;
}
String formattedWinRate = String.format("%.2f%%", winRate);
	
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("	이름: ");
      out.print(sName);
      out.write("<br>\r\n");
      out.write("	전화번호: ");
      out.print(sShowTel);
      out.write("<br><br>\r\n");
      out.write("	================<br>\r\n");
      out.write("	\r\n");
      out.print(sName);
      out.write("이 선택한 것은 ");
      out.print(userChoiceText );
      out.write(" 입니다.<br>\r\n");
      out.write("    컴퓨터가 선택한 것은 ");
      out.print(comChoiceText );
      out.write(" 입니다.<br>\r\n");
      out.write("    결과는 ");
      out.print(sTempRes );
      out.write(" 입니다.<br><br><br>\r\n");
      out.write("	\r\n");
      out.write("	실행한 횟수 :");
      out.print(nTotalNo );
      out.write(" 회<br>\r\n");
      out.write("	");
      out.print(sName);
      out.write("이 이긴 횟수 : ");
      out.print(nUserWinNo );
      out.write("회<br>\r\n");
      out.write("	");
      out.print(sName);
      out.write("의 승률은 ");
      out.print(formattedWinRate );
      out.write(" 입니다.<br><br><br>\r\n");
      out.write("	\r\n");
      out.write("	다시 시작하세요 !!<br>\r\n");
      out.write("	가위 바위 보 !! <br>\r\n");
      out.write("	<Form action=\"MyGame.jsp\" name=\"SRPForm\" method=\"post\">\r\n");
      out.write("		<input type=\"hidden\" name=\"mName\" value=\"");
      out.print(sName);
      out.write("\">\r\n");
      out.write("		<input type=\"hidden\" name=\"mTotal\" value=\"");
      out.print(nTotalNo);
      out.write("\">\r\n");
      out.write("		<input type=\"hidden\" name=\"mUserWin\" value=\"");
      out.print(nUserWinNo);
      out.write("\">\r\n");
      out.write("		\r\n");
      out.write("		");
if(nUser==1){
      out.write("\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"1\" checked>가위\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"2\" >바위\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"3\" >보 <br>\r\n");
      out.write("		");
}
		else if(nUser==2){
      out.write("\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"1\" >가위\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"2\" checked>바위\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"3\" >보 <br>\r\n");
      out.write("		");
}
		else if(nUser==3){
      out.write("\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"1\" >가위\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"2\" >바위\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"3\" checked>보 <br>\r\n");
      out.write("		");
}
		else {
      out.write("\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"1\" >가위\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"2\" >바위\r\n");
      out.write("		<input type=\"radio\" name=\"mRadio\" value=\"3\" >보 <br>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("		<input type=\"submit\">\r\n");
      out.write("	</Form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
